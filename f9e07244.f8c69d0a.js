(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=l(n),d=a,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||c;return n?r.a.createElement(m,i(i({ref:t},p),{},{components:n})):r.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},157:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/string-checks-953cceabd74d1ed4ec9f5f489f8f0864.png"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(7),c=(n(0),n(104)),o={id:"string-checks",title:"String checks",sidebar_label:"String checks"},i={unversionedId:"checks/string-checks",id:"checks/string-checks",isDocsHomePage:!1,title:"String checks",description:"Testomato allow create string checks for two type of page content. Those simple checks can be created for:",source:"@site/docs/checks/string-checks.md",slug:"/checks/string-checks",permalink:"/checks/string-checks",editUrl:"https://github.com/testomato/help.testomato.com/edit/master/docs/checks/string-checks.md",version:"current",lastUpdatedAt:1607358290,sidebar_label:"String checks",sidebar:"docs",previous:{title:"Checks",permalink:"/checks/introduction"},next:{title:"Semantic checks",permalink:"/checks/semantic"}},s=[{value:"How regular expressions are processed",id:"how-regular-expressions-are-processed",children:[]},{value:"When use <code>Text on page</code> when <code>HTML on page</code>?",id:"when-use-text-on-page-when-html-on-page",children:[]}],p={rightToc:s};function l(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,o,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Testomato allow create string checks for two type of page content. Those simple checks can be created for:"),Object(c.b)("p",null,Object(c.b)("img",{alt:"String checks",src:n(157).default})),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("inlineCode",{parentName:"li"},"HTML on page")," - represents raw source code that we downloaded from given URL"),Object(c.b)("li",{parentName:"ol"},Object(c.b)("inlineCode",{parentName:"li"},"Text on page")," - represents just readeable text from given URL")),Object(c.b)("p",null,"Then you can use following ",Object(c.b)("strong",{parentName:"p"},"operators"),":"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"contains")," - check that downloaded content contains given string with ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.php.net/manual/en/function.substr.php"}),"substr()")," PHP function"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"does not contain")," - check that content does not contain given string"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"equals")," - content is exactly same"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"matches")," - check that content match regular expression with ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.php.net/manual/en/function.preg-match.php"}),"preg_match()")," PHP function"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"does not match")," - check that content not match")),Object(c.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(c.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},Object(c.b)("strong",{parentName:"p"},"String checks")," are case sensitive, so make sure you ",Object(c.b)("strong",{parentName:"p"},"PaY ClosE AtTentioN")," to the text you enter."))),Object(c.b)("h3",{id:"how-regular-expressions-are-processed"},"How regular expressions are processed"),Object(c.b)("p",null,"Testomato process and escape all users inputs including regular expressions. We are using ",Object(c.b)("inlineCode",{parentName:"p"},"{")," and ",Object(c.b)("inlineCode",{parentName:"p"},"}")," for wrapping your\nregex and also add following ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.php.net/manual/en/reference.pcre.pattern.modifiers.php"}),"Pattern Modifiers"),":"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"u")," pattern and subject strings are treated as UTF-8. An invalid subject will cause the preg_* function to match nothing;"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"m")," subject strings are treated as multi-line string")),Object(c.b)("p",null,"You can debug your regex with ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.phpliveregex.com/"}),"https://www.phpliveregex.com/")),Object(c.b)("h3",{id:"when-use-text-on-page-when-html-on-page"},"When use ",Object(c.b)("inlineCode",{parentName:"h3"},"Text on page")," when ",Object(c.b)("inlineCode",{parentName:"h3"},"HTML on page"),"?"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"HTML on page")," is content as we downloaded from given url, only encoded to ",Object(c.b)("inlineCode",{parentName:"p"},"utf8")," - it's usefull for checking whole content including\nHTML tags or meta information in ",Object(c.b)("inlineCode",{parentName:"p"},"<head></head>"),". "),Object(c.b)("p",null," ",Object(c.b)("inlineCode",{parentName:"p"},"Text on page")," is subset of ",Object(c.b)("inlineCode",{parentName:"p"},"HTML on page")," - we just remove all markup (HTML tags,\nheader, scripts etc.) and then apply all your checks. "))}l.isMDXComponent=!0}}]);